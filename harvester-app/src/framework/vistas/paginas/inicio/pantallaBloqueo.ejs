<!DOCTYPE html>

<link rel='stylesheet' href='<%= rutaBase %>src/framework/utils/css/reseteoEstilos.css'>
<link rel='stylesheet' href='<%= rutaBase %>src/framework/utils/css/paginas/inicio/pantallaBloqueo.css'>

<body>
  <div class='pantalla-bloqueo'>
    <div class='contenido-bloqueo'>
      <% 
        // Determinar icono y clase CSS seg√∫n el tipo de error
        let icono = 'üîí';
        let claseError = 'error-dispositivo';
        let mostrarReintentar = false;
        
        if (typeof tipoError !== 'undefined') {
          switch(tipoError) {
            case 'error_conexion':
              icono = 'üåê‚ùå';
              claseError = 'error-conexion';
              mostrarReintentar = true;
              break;
            case 'error_servidor':
              icono = '‚ö†Ô∏è';
              claseError = 'error-servidor';
              mostrarReintentar = true;
              break;
            case 'dispositivo_ajeno':
              icono = 'üë§‚ùå';
              claseError = 'error-dispositivo';
              break;
            case 'multiples_dispositivos':
              icono = 'üì±üì±';
              claseError = 'error-dispositivo';
              break;
            default:
              icono = 'üîí';
              claseError = 'error-dispositivo';
          }
        }
      %>
      
      <div class='icono-bloqueo <%= claseError %>'><%= icono %></div>
      <h1>
        <% if (typeof tipoError !== 'undefined' && (tipoError === 'error_conexion' || tipoError === 'error_servidor')) { %>
          Error de Conexi√≥n
        <% } else { %>
          Aplicaci√≥n Deshabilitada
        <% } %>
      </h1>
      <p class='mensaje-bloqueo'><%= mensaje || 'Esta aplicaci√≥n ha sido deshabilitada por motivos de seguridad.' %></p>
        <p class='instrucciones'>
          Para m√°s informaci√≥n, contacte al administrador del sistema.
        </p>
      
      <!-- Informaci√≥n del dispositivo para soporte -->
      <div class='info-dispositivo' style='margin-top: 20px; font-size: 12px; color: #666;'>
        <p><strong>ID del Dispositivo:</strong> <span id='dispositivo-id'>Cargando...</span></p>
        <p><strong>Fecha:</strong> <%= new Date().toLocaleString('es-ES') %></p>
        <% if (typeof tipoError !== 'undefined') { %>
          <p><strong>C√≥digo de Error:</strong> <%= tipoError %></p>
        <% } %>
      </div>
    </div>
  </div>
  <script>
    // Obtener y mostrar el ID del dispositivo para soporte
    const { ipcRenderer } = require('electron');
    
    ipcRenderer.invoke('obtener-dispositivo-id').then(dispositivoId => {
      document.getElementById('dispositivo-id').textContent = dispositivoId;
    }).catch(error => {
      document.getElementById('dispositivo-id').textContent = 'No disponible';
    });
  </script>
</body>